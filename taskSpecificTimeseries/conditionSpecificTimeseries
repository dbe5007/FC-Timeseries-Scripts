#!/bin/bash

####Notes & Comments####
howtouse() {
echo ""
echo "Condition Specific Timeseries Creation"
echo "Daniel Elbich"
echo "Created: 1/10/15"
echo ""
echo ""
echo " Creates condition specific timeseries for functional connectivity analyses. Individual timeseries"
echo " are deconvolved using a gamma function generated by AFNI (https://afni.nimh.nih.gov/), multiplied"
echo " by a condition file of the same length denoting onsets of specified condition, and then reconvolved"
echo " with the gamma function."
echo ""
echo " Script should be placed outside folder tree. Data should be organized into separate project folders"
echo " with separate folders for timeseries and condition files (example below). Subject and ROI lists do "
echo " not need to be in same directory as script but is so will require full path to entered."
echo ""
echo " See publication for further details: Elbich D.B., Molenaar, P.C.M., & Scherf, K.S. (2019). Evaluating"
echo " the organizational structure and specificity of network topology within the face processing system"
echo ""
echo " Example Structure:"
echo "  projects/PROJECT1/condition"
echo "  projects/PROJECT1/data"
echo ""
echo ""
echo "Updates: 2/4/18"
echo ""
echo "Script updated to take arguments. Also added brief description of function and implemented arguments."
echo ""
echo ""
echo "Usage:"
echo "sh conditionSpecificTimeseries -tr <number> -lngths <number> -cond <condition> -proj <project> -rand <> -condfile <text file> -subj <text file> -rois <text file>"
echo ""
echo "Required arguments:"
echo ""
echo "      -tr         Enter TR of scan"
echo "      -lngths     Length of timeseries"
echo "      -cond       Condition to be created"
echo "      -proj       Project "
echo "      -rand       Flag for if timeseries is random (yes, no)"
echo "      -subj       Text file containing list of subject IDs"
echo "      -rois       Text file containing individual ROI labels for all included regions"
echo ""
echo "Optional arguments (You may optionally specify one or more of): "
echo ""
echo "      -condfile   Text file of condition for non-randomized series. Required if -rand is no"
echo ""
echo ""
exit 1
}
[ "$1" = "--help" ] && howtouse

#Check & Load in Parameter file
if [ "$1" = "--param" ]
then
    #Read in parameter file
    echo "Reading parameters: "
    i=0
    while read -r line; do
        #subjlist="$line"
        params[i]=$line
        echo ${params[i]}
        i=$((i + 1))
    done < "$2"

    TR=${params[0]}
    series=${params[1]}
    response=${params[2]}
    condition=${params[3]}
    condition_type=${params[4]}
    project=${params[5]}
    subjtxt=${params[6]}
    roitxt=${params[7]}

else
POSITIONAL=()
while [[ $# -gt 0 ]]
do
key="$1"

case $key in
-tr) TR="$2"
shift # past argument
shift # past value
;;
-lngths) series="$2"
shift # past argument
shift # past value
;;
-rand) response="$2"
if [ -z $4 ]
then
echo -n "Type in name of condition file"
read condition
else
condition="$4"
fi
shift # past argument
shift # past value
;;
-cond) condition_type="$2"
shift # past argument
shift # past value
;;
-proj) project="$2"
shift # past argument
shift # past value
;;
-subj) subjtxt="$2"
shift # past argument
shift # past value
;;
-rois) roitxt="$2"
shift # past argument
shift # past value
;;
*)    # unknown option
POSITIONAL+=("$1") # save it in an array for later
shift # past argument
;;
esac
done
set -- "${POSITIONAL[@]}" # restore positional parameters
fi


#List Parameters for analysis
echo REPETITION TIME = "${TR}"
echo SERIES LENGTH = "${series}"
echo RANDOMIZED SERIES = "${response}"
echo CONDITION FILE = "${condition}"
echo CONDITON = "${condition_type}"
echo PROJECT = "${project}"
echo SUBJECT LIST ="${subjtxt}"
echo REGION LIST ="${roitxt}"

#Create & Save Parameter Text File - skipped if parameters are loaded in
if [ "$1" != "--param" ]
then
    export paramsfile=projects/$project/output/"params_"$condition_type".txt"
    mkdir -p projects/$project/output/
    >> $paramsfile
    echo $TR >> $paramsfile
    echo $series >> $paramsfile
    echo $response >> $paramsfile
    echo $condition >> $paramsfile
    echo $condition_type >> $paramsfile
    echo $project >> $paramsfile
    echo $subjtxt >> $paramsfile
    echo $roitxt >> $paramsfile
fi

#Read in Subject ID
i=0
while read -r line; do
subjlist[i]=$line
i=$((i + 1))
done < "$subjtxt"

echo "Subjects: "
echo ${subjlist[@]}
echo ""

#Read in ROI list
i=0
while read -r line; do
roilist[i]=$line
i=$((i + 1))
done < "$roitxt"

echo "Regions of Interest: "
echo ${roilist[@]}
echo ""

lngthsubj=${#subjlist[@]}
lngthroi=${#roilist[@]}

echo "Generate the gamma hrf file:  GammaHR.1D ..."
waver -dt $TR -GAM -inline 1@1 > projects/$project/output/GammaHR.1D      #Original
#waver -dt $TR -WAV -delaytime 4 -risetime 6 -falltime 6 -restoretime 4 -inline 1@1 > projects/$project/output/GammaHR.1D

for (( i=0; i<${lngthsubj}; i++ ));
do

    subjID=${subjlist[$i]}

    for (( j=0; j<${lngthroi}; j++ ));
    do

        roi=${roilist[$j]}
        name=$subjID'_'$roi
        file=$name'.1D'

        if [ "$response" == 'yes' ];
        then
            condition=$subjID'_'$condition_type'.txt'
        fi

        echo $condition

        mkdir -p projects/$project/output/$condition_type/Deconvolved_Timeseries
        mkdir -p projects/$project/output/$condition_type/Unconvolved_Interaction
        mkdir -p projects/$project/output/$condition_type/Final_Timeseries

        echo "** Start PPI regressor generation..."
        echo "----------------------------------"
        echo "The ROI timecourse file: $project/data/$file"
        echo "The Condition file: $project/condition/$file"

        echo "Deconovle the ROI time course and generate neural activity file: Seed_Neur.1D ..."
        3dTfitter -RHS projects/$project/data/$file -FALTUNG projects/$project/output/GammaHR.1D projects/$project/output/$condition_type/Seed_Neur 012 0

        echo "Mutiply Neural activity and Condition and generate interaction file:  Inter_neu.1D ..."
        1deval -a projects/$project/output/$condition_type/Seed_Neur.1D\' -b projects/$project/condition/$condition_type/$condition -expr 'a*b' > projects/$project/output/$condition_type/Inter_neu.1D

        echo "Convolve interaction and gamma hrf and generate PPI regressor file: Inter_ts.1D ..."
        waver -dt $TR -GAM -input projects/$project/output/$condition_type/Inter_neu.1D -numout $series > projects/$project/output/$condition_type/Inter_ts.1D

        mv projects/$project/output/$condition_type/Seed_Neur.1D projects/$project/output/$condition_type/Deconvolved_Timeseries/$name'_'$condition_type'_Deconvolved_TS.1D'
        mv projects/$project/output/$condition_type/Inter_neu.1D projects/$project/output/$condition_type/Unconvolved_Interaction/$name'_'$condition_type'_Inter_neu.1D'
        mv projects/$project/output/$condition_type/Inter_ts.1D projects/$project/output/$condition_type/Final_Timeseries/$name'_'$condition_type'_Inter_ts.1D'

done

done

mv projects/$project/output/GammaHR.1D projects/$project/output/$condition_type/GammaHR.1D







